server.port = 8090

#数据库配置
spring.datasource.secondary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.secondary.url=jdbc:mysql://localhost:3306/daisly?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.secondary.username=root
spring.datasource.secondary.password=198922
# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
spring.datasource.secondary.initialSize=5
spring.datasource.secondary.minIdle=5
spring.datasource.secondary.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.secondary.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.secondary.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.secondary.minEvictableIdleTimeMillis=300000
spring.datasource.secondary.validationQuery=SELECT 1 FROM DUAL
spring.datasource.secondary.testWhileIdle=true
spring.datasource.secondary.testOnBorrow=false
spring.datasource.secondary.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.secondary.poolPreparedStatements=true
spring.datasource.secondary.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.secondary.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.secondary.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#Redis服务器地址
spring.redis.host = localhost
#Redis服务器链接密码
spring.redis.password = 198922
#Redis服务器端口
spring.redis.port = 6379
# 连接池中的最大空闲连接
spring.redis.pool.max-idle = 8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle = 0
#Redis 连接池最大连接数（负数表示没有限制）
spring.redis.pool.max-active = 8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait = -1


spring.http.encoding.charset=UTF-8
# enable http encoding support
spring.http.encoding.enabled=true
# force the configured encoding
spring.http.encoding.force=true

# MULTIPART (MultipartProperties)
spring.http.multipart.enabled=true
spring.http.multipart.file-size-threshold=10MB
spring.http.multipart.max-file-size=1024MB
spring.http.multipart.max-request-size=1024MB